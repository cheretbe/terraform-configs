resource "null_resource" "provision" {
    provisioner "local-exec" {
      # command = "./provision/ssh_config.sh ${docker_container.foo1.ip_address}"
      command = "docker cp ./provision/ssh_config.sh ${var.ansible_container_name}:/tmp/ && docker exec ${var.ansible_container_name} bash /tmp/ssh_config.sh"
    }

    connection {
      type     = "ssh"
      user     = "vagrant"
      # password = var.root_password
      # host     = self.public_ip
      # host     = "${docker_container.foo1.ip_address}"
      host     = "${var.ansible_host}"
      private_key = file("~/.vagrant.d/insecure_private_key")
    }
    provisioner "file" {
      source      = "provision/requirements.txt"
      destination = "/home/vagrant/requirements.txt"
    }
    provisioner "file" {
      content = <<-DOC
        # Ansible vars_file test generated by Terraform
        tf_var1: dummy
        tf_var2: ${var.ansible_container_name}
      DOC
      destination = "/home/vagrant/vars_test.yml"
    }
    provisioner "remote-exec" {
      inline = ["/usr/bin/curl -s https://raw.githubusercontent.com/cheretbe/bootstrap/master/setup_venv.py?flush_cache=True | /usr/bin/python3 - ansible --batch-mode --requirement /home/vagrant/requirements.txt"]
    }
    provisioner "file" {
      source      = "provision/ansible_test.yml"
      destination = "/home/vagrant/ansible_test.yml"
    }
    provisioner "remote-exec" {
      inline = ["/home/vagrant/.cache/venv/ansible/bin/ansible-playbook -i localhost, -c local /home/vagrant/ansible_test.yml"]
    }
}
